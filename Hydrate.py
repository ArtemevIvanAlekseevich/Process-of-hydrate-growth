def Cp(TПР, PПР, R = 468.993):
    E0 = 4.437 - 1.015 * TПР + 0.591 * TПР ** 2
    E1 = 3.29 - 11.37 / TПР + 10.9 / (TПР ** 2)
    E2 = 3.23 - 16.27 / TПР + 25.48 / (TПР ** 2) - 11.81 / (TПР ** 3)
    E3 = - 0.214 + 0.908 / TПР - 0.967 / (TПР ** 2)
    return R * (E0 + E1 * PПР + E2 * PПР ** 2 + E3 * PПР ** 3)/1000

def Z(TПР, PПР):
    A1 = -0.39 + 2.03 / TПР - 3.16 / TПР ** 2 + 1.09 / TПР ** 3
    A2 = 0.0423 - 0.1812 / TПР+ 0.2124 / TПР ** 2
    return 1+ A1 * PПР + A2 * PПР ** 2

def μ(TПР, PПР):
    μ0 = (1.81 + 5.95 * TПР) / 10 ** 6
    B1 = - 0.67 + 2.36 / TПР - 1.93 / TПР ** 2
    B2 = 0.8 - 2.89 / TПР + 2.65 / TПР ** 2
    B3 = -0.1 + 0.354 / TПР - 0.314 / TПР ** 2
    return μ0 * (1 + B1 * PПР + B2 * PПР ** 2 + B3 * PПР ** 3)

def Di(TПР, PПР):
    H0 =24.96 - 20.3 * TПР + 4.57 * TПР ** 2
    H1 = 5.66 - 19.92 / TПР + 16.89 / TПР ** 2
    H2 = - 4.11 + 14.68 / TПР - 13.39 / TПР ** 2
    H3 = 0.568 - 2 / TПР + 1.79 / TПР ** 2
    return H0 + H1 * PПР + H2 * PПР ** 2 + H3 * PПР ** 3

def λg (T1, P1):
    λ1 = 0.124 * T1 - 3
    λ2 = 0.111 * T1 + 11.4
    return ((λ1 - λ2) / (-9.9) * (P1 - 10) + λ2) / 1000 

def λ (Re1, d1, kэ = 0.001):
    return 0.067 * (158 / Re1 + 2 * kэ / d) ** 0.2 / (0.95 **2)



import math 


P0 = 5.585 ##float(input('давление в начале зоны гидратообразования в МПа'))
Pk = 5.334
T0 = 287.21 ##float(input('температура в начале зоны гидратообразования в К'))
G = 27.2162 ## массовый расход в кг/с
L = 12150.0 ##float(input('длина зоны гидратообразования в м'))
dl = 10.0 ##float(input('шаг длины для рассчета зоны гидратообразования в м'))
n = L / dl
dt = 1 ##float(input('шаг времени для рассчета зоны гидратообразования в с'))
Rиз = 6.027 ##3.8246  ##float(input('сопротивление изоляции в (Вт/(м^2*К))^-1'))
αгр = 1.4498 ##float(input('коэф теплоотдачи от т в окр среду в (Вт/(м^2*К))^-1'))
d = 388.4 ##float(input('диаметр внутренний в мм'))
d = d / 1000
Pпк = 4.5627 ##float(input('давление псевдокритическое в МПа'))
Tпк = 198.095 ##float(input('температура псевдокритическая в К'))
ρвх = 46.735 ## плотность газа на входе в зону гидратообразования
δг = 0.0001 ## толщина гидратного слоя в нулевой момент времени м
R =  468.993
Tнар = 237.0
λгид = 0.55
Dиз = 556.4
Dиз = Dиз / 1000
ρg = 900
Hg = 5.1 * 10 ** 5
M = 17.728
ρ0 = 0.7386
δ2 = 0
δ1 = 0
δ = [[0.0 for j in range(int(n + 2))] for i in range(72001)]
T = [[0.0 for j in range(int(n + 2))] for i in range(72001)]
P = [[0.0 for j in range(int(n + 2))] for i in range(72001)]
K = [[0.0 for j in range(int(n + 2))] for i in range(72001)]



for i in range(1, int( n + 2)):
    P[0][i] = (P0 ** 2 - (P0 ** 2 - Pk ** 2) * i * dl / L ) ** 0.5
    T[0][i] = 237 + (313.15 - 237) * math.exp(-0.00487 * (67.85 + i * dl / 1000)) - 4.2166 * (6.819 ** 2 - Pk ** 2) / (2 * 0.00487 * 80 * 6.107) * (1 - math.exp(-0.00487 * (67.85 + i * dl / 1000))) 

for i in range(1, int( n + 2)):
    δ [0][i] = δг 


for j in range(1, 39239):
    w = 4 * G / (ρвх * 3.14 * (d - 2 * δ [j-1][0]) ** 2)
    n1 =  (d - 2 * δ [j-1][0]) / d 
    ΔP = ((1.1 - n1) / (0.67 - 0.57 * n1) - 1) ** 2 / 4 * w ** 2 * ρвх
    ΔT = Di(T0/Tпк, P0/Pпк) * ΔP / 10 ** 6
    T[j][0] = T0 - ΔT
    P[j][0] = P0 - ΔP / 10 ** 6
    print(j)
    for i in range(1, int(n + 2)):
        ## Расчет давлений
        D = d - 2 * δ[j-1][i]
        Re = 4 * G / (3.14 * D * μ(T[j][i-1]/Tпк, P[j][i-1]/Pпк))
        P[j][i] = (P [j][i-1] ** 2 - λ(Re, D) / D * G ** 2 / (3.14 * D ** 2 / 4) ** 2 * Z(T[j][i-1]/Tпк, P[j][i-1]/Pпк) * R * T[j][i-1] * dl / 10 ** 12) ** 0.5
        ## Расчет температур
        Rg = D / (λгид * 2) * math.log(d/D)
        K[j][i] = (Rg + Rиз + 1 / αгр) ** - 1 
        Шу = K[j][i] * 3.14 * Dиз * dl /(G * Cp(T[j][i-1]/Tпк, P[j][i-1]/Pпк) * 1000)
        T[j][i] = Tнар + (T[j][i-1] - Tнар) * math.exp(-Шу) - Di(T[j][i-1]/Tпк, P[j][i-1]/Pпк) * (P[j][i-1] - P[j][i]) 
        ## Расчет толщины гидратов
        ## 1 случай
        Pr = μ(T[j][i-1]/Tпк, P[j][i-1]/Pпк) * Cp(T[j][i]/Tпк, P[j][i]/Pпк) / λg (T[j][i], P[j][i])
        Kg = 0.021 * Re ** 0.8 * Pr ** 0.43 * λg (T[j][i], P[j][i]) / D
        Tf = 291.8 - 18.4002 + 8.03 * math.log(P[j][i])
        δ1 = δ[j-1][i] + (-λгид * (Tf - Tнар) / (ρg * Hg * (d/2 - δ[j-1][i]) * math.log(1 - 2 * δ[j-1][i] / d)) - Kg * (Tf - T[j][i]) / (ρg * Hg)) * dt
        ## 2 случай
        X = T[j][i] / 273.15
        A = math.exp(-14.647619*X ** 4+82.110849*X ** 3-181.003678*X ** 2+194.078257*X-78.994983)
        Ap = 4.9308*10 ** -35*(-58.5905*X ** 3+246.3325*X ** 2-362.0074*X+194.0783)* math.exp(14.6476*X ** 4+82.1108*X ** 3-181.0037*X ** 2+194.0783*X)
        Bp = 22142579.787*(111.1072*X ** 3-291.3607*X ** 2+256.7428*X-75.899)* math.exp (27.7768*X ** 4-97.1202*X ** 3+128.3714*X ** 2-75.899*X)
        dW = - M / ρ0 *(-A / (P[j][i] * 100 / 9.81) ** 2 * ((P[j][i] - P[j][i-1]) *100 / 9.81) / 10 + (Ap / (P[j][i] *100/9.81) + Bp) * (T[j][i] - T[j][i-1]) / 10)
        k = 1

        S1 = 3.14 * D ** 2 / 4
        S22 = S1 - k / ρg * dW * dt
        δ2 = (d - (S22 * 4 / 3.14) ** 0.5) / 2
        S21 =(d - 2 * δ1) ** 2 * 3.14 / 4
        
        if dW < 0:
            δ[j][i] = δ[j-1][i]
        elif S22 < S21:
            δ[j][i] = δ1
        elif S22 > S21:
            δ[j][i] = δ2
        else:
            δ[j][i] = min(δ1, δ2)
        
        
        

f = open("C:\\Users\\jhnar\\Desktop\\python\\MG\\T.txt", "w")
for j in 60, 600, 1800, 3600, 7200, 18000, 36000, 39238:   
    for i in range (int(n + 2)):
        f.write(str (round (T[j][i],4)))
        f.write(' ')
    f.write('\n')
f.close()

f = open("C:\\Users\\jhnar\\Desktop\\python\\MG\\d.txt", "w")
for j in 60, 600, 1800, 3600, 7200, 18000, 36000, 39238:   
    for i in range (int(n + 2)):
        f.write(str (round (δ[j][i],7)))
        f.write(' ')
    f.write('\n')
f.close()

f = open("C:\\Users\\jhnar\\Desktop\\python\\MG\\P.txt", "w")
for j in 60, 600, 1800, 3600, 7200, 18000, 36000, 39238:   
    for i in range (int(n + 2)):
        f.write(str (round (P[j][i],4)))
        f.write(' ')
    f.write('\n')
f.close()

f = open("C:\\Users\\jhnar\\Desktop\\python\\MG\\K.txt", "w")
for j in 60, 600, 1800, 3600, 7200, 18000, 36000,39238:   
    for i in range (int(n + 2)):
        f.write(str (round (K[j][i],7)))
        f.write(' ')
    f.write('\n')
f.close()